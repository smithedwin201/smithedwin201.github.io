<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[title]]></title>
    <url>%2F2018%2F06%2F19%2Ftitle%2F</url>
    <content type="text"><![CDATA[vncxg]]></content>
  </entry>
  <entry>
    <title><![CDATA[titleq]]></title>
    <url>%2F2018%2F06%2F19%2F%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E6%A0%91%20%2F</url>
    <content type="text"><![CDATA[树 平凡树：就是平凡图 森林：连通分支都是树的无向图 树的判定（m为边数，n为节点数） 连通而不含回路 连通或不含回路，且m=n-1 无回路，但任意两节点之间加一条新边，有唯一的一条基本回路 连通，但删除任意边后，就不连通（n&gt;=2） 每队节点之间有唯一的一条基本通路 任意非平凡树都至少有两片叶(可用握手定理,m=n-1和不等式证明) 生成树:图G的生成子图是树,则称之为图G的生成树 树枝:生成树的边 弦:图G中不在生成树中的边 补:生成树所有弦的集合 生成树的判定:充分必要条件是原图是连通的(下面的俩个方法没什么用) 破圈法:删除回路中的边,直到剩下n-1条边 避圈法:选取不构成回路的边 求生成树的广度优先算法 先随便选一个节点,找与他相邻的节点做标记 最后保证每一个节点都有其前驱节点 不同的选择会有不同的生成树 最小生成树 最小生成树:对于连通赋权图,要使最后的生成树权和最小 kruskal算法: 一共取n-1条边 每次取不构成回路的最小权边 Prim算法:(每一步一定是树,不需要验证是否有回路) 取一个节点 在剩下的节点中找与已取节点邻接的最小权边 直到取完所有节点 根树:非平凡有向树,且有一个节点入度为0,其他节点入度为1 分支点:内点和根的统称 层数:从根到任意节点的通路长度 k元完全树:每个分支点恰好有k个儿子(而不是有k个节点) 若叶为t,分支数为i则:(k-1)*i=t-1 证明: t+i-1=m=k(出度为边数) 二元完全树中: i=t-1 m=n-1=i+t-1=2t-2 根树变成二叉树: 保留每个父亲和最左边儿子的连线,其他删掉 从左向右连线,即弟弟变右儿子 反过来就是右儿子变弟弟 森林变二叉树: 先把每个树变成二叉树(会导致所有二叉树的根没有右子树) 除第一个二叉树,把每个剩下的树作为作为左边树的右子树 树的权:为每一层中叶的权值*叶所在的层数之和 最优树:树的权最小 赫夫曼算法:可以解决最小前缀码和分硬币等问题 建立集合存放权值(字母出现的概率等) 取出两个最小的权值,得到其父亲v 把v加入原集合重复操作,直到集合中只有一个元素 决策树:每个分支点都是一个问题 5硬币问题:有一个硬币和其他重量不同用天平需要称几下,三下 推理从根到叶 博弈树:7根火柴问题:甲乙依次取一根或两根火柴,但不能不取,取走最后一根的人胜利 胜利的关键在于把3的倍数个火柴留给对方取 这样无论对方取一根还是两根你都可以再次把3的倍数的火柴给对方 当最后剩下3根时,对方只能去一根或者两根你就赢了 此树要从叶向根推理 关键道路法,用于合理安排工期:规则是作业&lt;v5,v6&gt;表示的作业要在&lt;s,v3&gt;,&lt;v3,v5&gt;,&lt;s,v5&gt;三个作业完成之后才能开始,求出从s到t的最低限度时间,也叫关键道路(第一个生成树) 为了不耽误整个工程的总体完成时间,并且对于非关键作业保证其机动性,有两个问题我们最为关心: 作业&lt;Vm,Vn&gt;最早什么时候能开始 计算从s到各点的最长道路.权值和就是作业最早开始时间 作业&lt;Vm,Vn&gt;最晚什么时候必须结束 计算从各节点到t的最长道路.项目整体完成时间-各节点权值和就是最晚结束时间 各作业的机动时间计算方法:设作业为&lt;Vn,Vm&gt;,节点Vm的最晚结束时间-节点Vn的最早开始时间(也就是作业的最早开始时间)加上作业所需的时间,这么算的原因是任务可能不在关键道路中,在关键道路中的节点可以直接用末节点的两个时间相减.]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F06%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
